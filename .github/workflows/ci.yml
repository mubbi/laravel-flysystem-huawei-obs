name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: [8.2, 8.3]
        laravel: [11.*]

    name: PHP ${{ matrix.php }} - Laravel ${{ matrix.laravel }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo, phar, reflection, session, simplexml, spl, standard, tokenizer, xml, xmlreader, xmlwriter, zip, zlib
        coverage: xdebug

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction

    - name: Execute tests (via PHPUnit)
      run: vendor/bin/phpunit --coverage-clover=coverage.xml --coverage-text

    - name: Verify coverage file exists
      run: |
        if [ ! -f coverage.xml ]; then
          echo "Error: coverage.xml file was not generated"
          exit 1
        fi
        echo "Coverage file size: $(wc -c < coverage.xml) bytes"

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
        verbose: true

  phpstan:
    runs-on: ubuntu-latest
    name: PHPStan Analysis

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo, phar, reflection, session, simplexml, spl, standard, tokenizer, xml, xmlreader, xmlwriter, zip, zlib

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction

    - name: Run PHPStan
      run: vendor/bin/phpstan analyse

  pint:
    runs-on: ubuntu-latest
    name: Laravel Pint

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo, phar, reflection, session, simplexml, spl, standard, tokenizer, xml, xmlreader, xmlwriter, zip, zlib

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction

    - name: Run Laravel Pint
      run: vendor/bin/pint --test

  commitlint:
    runs-on: ubuntu-latest
    name: Conventional Commits Linter
    if: github.event_name == 'pull_request'

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Lint pull request title
      uses: amannn/action-semantic-pull-request@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        wip: true
        # Configure the types, scopes, and WIP settings
        types: |
          feat
          fix
          docs
          style
          refactor
          perf
          test
          chore
          ci
          build
          revert
        scopes: |
          adapter
          service-provider
          exceptions
          config
          readme
          ci
          tests
          examples
          deps
          release
        requireScope: false
        requireBody: false
        requireFooter: false

  commitlint-push:
    runs-on: ubuntu-latest
    name: Validate Commit Messages
    if: github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Validate commit messages
      uses: wagoid/commitlint-github-action@v5
      with:
        configFile: '@commitlint/config-conventional' 